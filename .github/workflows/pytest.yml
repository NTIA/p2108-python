name: Test with pytest

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - pre-publish-revisions # TESTING
  pull_request:
    branches:
      - main
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
    LIBRARY_BASE_REPO: NTIA/p2108
    LIBRARY_RELEASE_TAG: v1.0-rc.1
    LIBRARY_DESTINATION_DIRECTORY: 'src/ITS/ITU/PSeries/P2108/'

jobs:
  run-all-tests:
    name: ${{ matrix.platform.os-name }} / Py${{ matrix.py }}
    runs-on: ${{ matrix.platform.os-runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os-name: 'Windows (64-bit)'
            os-runner: 'windows-latest'
            arch-id: 'x64'
            release-file-pattern: '*-x64.dll'
          - os-name: 'macOS'
            os-runner: 'macos-latest'
            arch-id: 'universal'
            release-file-pattern: '*.dylib'
          - os-name: 'Linux (Ubuntu)'
            os-runner: 'ubuntu-latest'
            arch-id: 'x86_64'
            release-file-pattern: '*.so'
        py:    # Python versions to test
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
        - name: Check out repository
          uses: actions/checkout@v4
          with:
            submodules: true

        # - name: Restore ${{ env.LIBRARY_RELEASE_TAG }} binaries from cache if available
        #   id: cache-restore
        #   uses: actions/cache@v4
        #   with:
        #     key: ${{ runner.os }}-${{ matrix.platform.arch-id }}-${{ env.LIBRARY_RELEASE_TAG }}
        #     path: ${{ env.LIBRARY_DESTINATION_DIRECTORY}}/${{ matrix.platform.release-file-pattern }}

        - name: Download required ${{ env.LIBRARY_RELEASE_TAG }} binaries
          uses: robinraju/release-downloader@v1
          with:
            repository: ${{ env.LIBRARY_BASE_REPO }}
            tag: ${{ env.LIBRARY_RELEASE_TAG }}
            fileName: '*.dll,*.so,*.dylib'
            tarBall: false
            zipBall: false
            out-file-path: ${{ env.LIBRARY_DESTINATION_DIRECTORY }}

        - name: Set up Python ${{ matrix.py }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.py }}
            cache: 'pip'

        - name: Install dependencies for testing
          run: python -m pip install .[tests]

        - name: Force reinstall local package
          run: python -m pip install . --force-reinstall

        - name: Run pytest
          run: pytest --cov-report=term-missing --no-cov-on-fail --cov
