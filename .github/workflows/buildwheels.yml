name: Build Wheels

on: [push] # TODO

env:
    LIBRARY_BASE_REPO: NTIA/p2108
    LIBRARY_RELEASE_TAG: v1.0-rc.1
    LIBRARY_DESTINATION_DIRECTORY: 'src/ITS/ITU/PSeries/P2108/'

jobs:
  build_wheels:
    name: Build a universal, cross-platform wheel
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: true

      # Only the binaries required for the current platform are downloaded. Note that the distributed
      # wheel for proplib python packages includes all binaries, so that the wheel is inherently cross-platform.
      - name: Download required ${{ env.LIBRARY_RELEASE_TAG }} Windows binaries
        uses: robinraju/release-downloader@v1
        with:
          repository: ${{ env.LIBRARY_BASE_REPO }}
          tag: ${{ env.LIBRARY_RELEASE_TAG }}
          fileName: '*.dll'
          tarBall: false
          zipBall: false
          out-file-path: ${{ env.LIBRARY_DESTINATION_DIRECTORY }}

      - name: Download required ${{ env.LIBRARY_RELEASE_TAG }} Linux binaries
        uses: robinraju/release-downloader@v1
        with:
          repository: ${{ env.LIBRARY_BASE_REPO }}
          tag: ${{ env.LIBRARY_RELEASE_TAG }}
          fileName: '*.so'
          tarBall: false
          zipBall: false
          out-file-path: ${{ env.LIBRARY_DESTINATION_DIRECTORY }}

      - name: Download required ${{ env.LIBRARY_RELEASE_TAG }} macOS binaries
        uses: robinraju/release-downloader@v1
        with:
          repository: ${{ env.LIBRARY_BASE_REPO }}
          tag: ${{ env.LIBRARY_RELEASE_TAG }}
          fileName: '*.dylib'
          tarBall: false
          zipBall: false
          out-file-path: ${{ env.LIBRARY_DESTINATION_DIRECTORY }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install build dependencies
        run: pip install hatchling

      - name: Build wheels
        run: hatchling build

      - name: List files in subdir (DEBUG)
        run: ls
        working-directory: ${{ env.LIBRARY_DESTINATION_DIRECTORY }}

      - name: List files in subdir (DEBUG)
        run: ls
        working-directory: dist

      - uses: actions/upload-artifact@v4
        with:
          name: Universal Wheel (.whl)
          path: dist/*.whl
